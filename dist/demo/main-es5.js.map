{"version":3,"sources":["webpack:///src/app/hello.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/polyfills.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["HelloComponent","AppComponent","name","major","tools","items","pasteCleanupSettings","prompt","plainText","keepFormat","value","AppModule","bootstrapModule","then","ref","window","destroy","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'hello',\n  template: `<h1>Hello {{name}}!</h1>`,\n  styles: [`h1 { font-family: Lato; }`]\n})\nexport class HelloComponent  {\n  @Input() name: string;\n}\n","import { Component, VERSION } from '@angular/core';\nimport {\n  ToolbarSettingsModel,\n  ToolbarType,\n  PasteCleanupSettingsModel,\n  HtmlEditorService,\n  ImageService,\n  LinkService,\n  ToolbarService,\n} from '@syncfusion/ej2-angular-richtexteditor';\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [ToolbarService, LinkService, ImageService, HtmlEditorService],\n})\nexport class AppComponent {\n  name = 'Angular ' + VERSION.major;\n\n  /**\n   * Sync Fusion html editor config\n   */\n  public tools: ToolbarSettingsModel = {\n    items: [\n      'Bold',\n      'Italic',\n      'Underline',\n      'StrikeThrough',\n      'SubScript',\n      'SuperScript',\n      '|',\n      'Formats',\n      'FontName',\n      'FontSize',\n      'FontColor',\n      'BackgroundColor',\n      '|',\n      'Alignments',\n      'OrderedList',\n      'UnorderedList',\n      'Indent',\n      'Outdent',\n      '|',\n      'Image',\n      'CreateLink',\n      '|',\n      'Undo',\n      'Redo',\n    ],\n  };\n  public pasteCleanupSettings: PasteCleanupSettingsModel = {\n    prompt: true,\n    plainText: false,\n    keepFormat: false,\n  };\n\n  public value = 'Hi';\n}\n","This is the editor.\n<ejs-richtexteditor\n  id=\"defaultRTE\"\n  [toolbarSettings]=\"tools\"\n  [pasteCleanupSettings]=\"pasteCleanupSettings\"\n  [(ngModel)]=\"this.value\"\n  name=\"text\"\n  #text=\"ngModel\"\n>\n</ejs-richtexteditor>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HelloComponent } from './hello.component';\nimport { RichTextEditorModule } from '@syncfusion/ej2-angular-richtexteditor';\n\n@NgModule({\n  imports: [BrowserModule, FormsModule, RichTextEditorModule],\n  declarations: [AppComponent, HelloComponent],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following to support `@angular/animation`. */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n/** Evergreen browsers require these. **/\n// import 'core-js/es6/reflect';\n// import 'core-js/es7/reflect';\n\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n\n/***************************************************************************************************\n * Zone JS is required by Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\n/**\n * Date, currency, decimal and percent pipes.\n * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\n */\n// import 'intl';  // Run `npm install --save intl`.","import './polyfills';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {\n  // Ensure Angular destroys itself on hot reloads.\n  if (window['ngRef']) {\n    window['ngRef'].destroy();\n  }\n  window['ngRef'] = ref;\n\n  // Otherwise, log the boot error\n}).catch(err => console.error(err));","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}